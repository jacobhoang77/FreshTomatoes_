{"version":3,"file":"static/js/957.369c87a1.chunk.js","mappings":"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","sources":["Filter.js","pages/SearchMovies.js","SearchPage.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_KEY = 'f71a63058781b41be67992f9e77f6da4';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\nconst AUTH_TOKEN = `Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmNzFhNjMwNTg3ODFiNDFiZTY3OTkyZjllNzdmNmRhNCIsIm5iZiI6MTcyMzY4OTI1MC45NjU4MjgsInN1YiI6IjY2YTgxOWUwNmE3ZTFhMDE5MjhjOWRjMSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.i31dY9qPIcynkPZEizd6b4LrSYHB5h5AbnTTr6pYHs4`;\r\n\r\nconst fetchMovies = async (category) => {\r\n  let endpoints = [];\r\n\r\n  switch (category) {\r\n    case 'top_rated':\r\n      endpoints.push('/movie/top_rated');\r\n      break;\r\n    case 'popular':\r\n      endpoints.push('/movie/popular');\r\n      break;\r\n    case 'now_playing':\r\n      endpoints.push('/movie/now_playing');\r\n      break;\r\n    case 'upcoming':\r\n      endpoints.push('/movie/upcoming');\r\n      break;\r\n    case 'all':\r\n      endpoints = ['/movie/top_rated', '/movie/popular', '/movie/now_playing', '/movie/upcoming'];\r\n      break;\r\n    default:\r\n      throw new Error('Unknown category');\r\n  }\r\n\r\n  try {\r\n    const requests = endpoints.map((endpoint) =>\r\n      axios.get(`${BASE_URL}${endpoint}`, {\r\n        params: { language: 'en-US', page: '1' },\r\n        headers: {\r\n          accept: 'application/json',\r\n          Authorization: AUTH_TOKEN,\r\n        },\r\n      })\r\n    );\r\n\r\n    const responses = await Promise.all(requests);\r\n    const movies = responses.flatMap((response) => response.data.results);\r\n    return movies;\r\n  } catch (error) {\r\n    console.error('Error fetching data from TMDB:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport default fetchMovies;\r\n","import React, { useState, useEffect } from 'react';\r\nimport fetchMovies from '../Filter'; \r\nimport './SearchMovies.css';\r\nconst SearchMovies = () => {\r\n  const [query, setQuery] = useState('');\r\n  const [movies, setMovies] = useState([]);\r\n  const [filteredMovies, setFilteredMovies] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [category, setCategory] = useState('popular'); \r\n  useEffect(() => {\r\n    const loadMovies = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      try {\r\n        const fetchedMovies = await fetchMovies(category); \r\n        setMovies(fetchedMovies);\r\n        setFilteredMovies(fetchedMovies);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadMovies();\r\n  }, [category]);\r\n\r\n  const searchMovies = (event) => {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    const filtered = movies.filter((movie) =>\r\n      movie.title.toLowerCase().includes(query.toLowerCase())\r\n    );\r\n    setFilteredMovies(filtered);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={searchMovies}>\r\n        <label htmlFor=\"query\">Movie Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"query\"\r\n          placeholder=\"Search for a movie\"\r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Search</button>\r\n      </form>\r\n      <div className=\"filters\">\r\n        <label htmlFor=\"category\">FILTER:</label>\r\n        <select\r\n          name=\"category\"\r\n          value={category}\r\n          onChange={(e) => setCategory(e.target.value)}\r\n        >\r\n          <option value=\"all\">ALL</option>\r\n          <option value=\"top_rated\">TOP RATED</option>\r\n          <option value=\"popular\">POPULAR</option>\r\n          <option value=\"now_playing\">NOW PLAYING</option>\r\n          <option value=\"upcoming\">UPCOMING</option>\r\n        </select>\r\n      </div>\r\n      {loading && <p>Loading...</p>}\r\n      {error && <p>{error}</p>}\r\n      <div className=\"movie-results\">\r\n        {filteredMovies.length > 0 && (\r\n          <ul>\r\n            {filteredMovies.map((movie) => (\r\n              <li key={movie.id} className=\"movie-card\">\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`}\r\n                  alt={`${movie.title} Poster`}\r\n                  className=\"movie-poster\"\r\n                />\r\n                <div className=\"movie-info\">\r\n                  <h3>{movie.title}</h3>\r\n                  <p>{movie.overview}</p>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchMovies;\r\n","import React from 'react';\r\nimport SearchMovies from './pages/SearchMovies';\r\nimport './pages/SearchPage.css'; \r\n\r\nfunction SearchPage() {\r\n  return (\r\n    <div className=\"search\">\r\n      <h2 className=\"search-title\">SEARCH FOR MOVIES:</h2>\r\n      <SearchMovies />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchPage;\r\n"],"names":["async","endpoints","category","push","Error","requests","map","endpoint","axios","get","concat","params","language","page","headers","accept","Authorization","responses","Promise","all","flatMap","response","data","results","error","console","SearchMovies","query","setQuery","useState","movies","setMovies","filteredMovies","setFilteredMovies","loading","setLoading","setError","setCategory","useEffect","fetchedMovies","fetchMovies","err","message","loadMovies","_jsxs","children","onSubmit","event","preventDefault","filtered","filter","movie","title","toLowerCase","includes","_jsx","htmlFor","type","name","placeholder","value","onChange","e","target","className","length","src","poster_path","alt","overview","id"],"sourceRoot":""}