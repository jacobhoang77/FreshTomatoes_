{"version":3,"file":"static/js/547.a6393069.chunk.js","mappings":"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","sources":["pages/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './Home.css';\r\n\r\nconst API_KEY = 'f71a63058781b41be67992f9e77f6da4';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\nconst options = {\r\n  method: 'GET',\r\n  headers: {\r\n    accept: 'application/json',\r\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmNzFhNjMwNTg3ODFiNDFiZTY3OTkyZjllNzdmNmRhNCIsIm5iZiI6MTcyMjI5MjgyNS4yODg3MDQsInN1YiI6IjY2YTgxOWUwNmE3ZTFhMDE5MjhjOWRjMSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.c27yQxSBea0btlLS2XPKENd5yHHlP4K5sWdLFVa0m0I'\r\n  }\r\n};\r\n\r\nfunction Home() {\r\n  const [nowPlayingMovies, setNowPlayingMovies] = useState([]);\r\n  const [topRatedMovies, setTopRatedMovies] = useState([]);\r\n  const [upcomingMovies, setUpcomingMovies] = useState([]);\r\n  const [randomMovie, setRandomMovie] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchNowPlayingMovies = async () => {\r\n      try {\r\n        const response = await fetch(`${BASE_URL}/movie/now_playing?api_key=${API_KEY}`, options);\r\n        if (!response.ok) throw new Error('Network response was not ok');\r\n        const data = await response.json();\r\n        setNowPlayingMovies(data.results || []);\r\n      } catch (error) {\r\n        console.error('Error fetching now playing movies:', error);\r\n      }\r\n    };\r\n\r\n    const fetchTopRatedMovies = async () => {\r\n      try {\r\n        const response = await fetch(`${BASE_URL}/movie/top_rated?api_key=${API_KEY}`, options);\r\n        if (!response.ok) throw new Error('Network response was not ok');\r\n        const data = await response.json();\r\n        setTopRatedMovies(data.results || []);\r\n      } catch (error) {\r\n        console.error('Error fetching top rated movies:', error);\r\n      }\r\n    };\r\n\r\n    const fetchUpcomingMovies = async () => {\r\n      try {\r\n        const response = await fetch(`${BASE_URL}/movie/upcoming?api_key=${API_KEY}`, options);\r\n        if (!response.ok) throw new Error('Network response was not ok');\r\n        const data = await response.json();\r\n        setUpcomingMovies(data.results || []);\r\n      } catch (error) {\r\n        console.error('Error fetching upcoming movies:', error);\r\n      }\r\n    };\r\n\r\n    const fetchRandomMovie = async () => {\r\n      try {\r\n        const response = await fetch(`${BASE_URL}/movie/popular?api_key=${API_KEY}`, options);\r\n        if (!response.ok) throw new Error('Network response was not ok');\r\n        const data = await response.json();\r\n        if (data.results && data.results.length > 0) {\r\n          const randomIndex = Math.floor(Math.random() * data.results.length);\r\n          setRandomMovie(data.results[randomIndex]);\r\n        } else {\r\n          throw new Error('No popular movie found');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching random movie:', error);\r\n      }\r\n    };\r\n\r\n    fetchNowPlayingMovies();\r\n    fetchTopRatedMovies();\r\n    fetchUpcomingMovies();\r\n    fetchRandomMovie();\r\n  }, []);\r\n\r\n  const renderMovieSection = (title, movies) => (\r\n    <section className=\"movie-section\">\r\n      <h2>{title}</h2>\r\n      <ul>\r\n        {movies.map((movie) => (\r\n          <li key={movie.id} className=\"movie-item\">\r\n            <img src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`} alt={movie.title} className=\"movie-poster\" />\r\n            <div className=\"movie-info\">\r\n              <h3>{movie.title} ({new Date(movie.release_date).getFullYear()})</h3>\r\n              <p><strong>Rating:</strong> {movie.vote_average}</p>\r\n              <p><strong>Release Date:</strong> {movie.release_date}</p>\r\n              <p><strong>Overview:</strong> {movie.overview}</p>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      {renderMovieSection(\"Now Playing\", nowPlayingMovies)}\r\n      {renderMovieSection(\"Top Rated Movies of All Time\", topRatedMovies)}\r\n      {renderMovieSection(\"Upcoming Movies\", upcomingMovies)}\r\n      {randomMovie && (\r\n        <section className=\"random-movie\">\r\n          <h2>Random Movie</h2>\r\n          <div className=\"movie-item\">\r\n            <img src={`https://image.tmdb.org/t/p/w200${randomMovie.poster_path}`} alt={randomMovie.title} className=\"movie-poster\" />\r\n            <div className=\"movie-info\">\r\n              <h3>{randomMovie.title} ({new Date(randomMovie.release_date).getFullYear()})</h3>\r\n              <p><strong>Rating:</strong> {randomMovie.vote_average}</p>\r\n              <p><strong>Release Date:</strong> {randomMovie.release_date}</p>\r\n              <p><strong>Overview:</strong> {randomMovie.overview}</p>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"names":["API_KEY","BASE_URL","options","method","headers","accept","Authorization","nowPlayingMovies","setNowPlayingMovies","useState","topRatedMovies","setTopRatedMovies","upcomingMovies","setUpcomingMovies","randomMovie","setRandomMovie","useEffect","async","response","fetch","concat","ok","Error","data","json","results","error","console","fetchNowPlayingMovies","fetchTopRatedMovies","fetchUpcomingMovies","length","randomIndex","Math","floor","random","fetchRandomMovie","renderMovieSection","title","movies","_jsxs","className","children","_jsx","map","movie","src","poster_path","alt","Date","release_date","getFullYear","vote_average","overview","id"],"sourceRoot":""}