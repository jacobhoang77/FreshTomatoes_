{"version":3,"file":"static/js/130.8cd822f5.chunk.js","mappings":"iKAyEA,QAlEA,WACE,MAAOA,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,KAC9BC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,IACxCG,EAAYC,IAAiBJ,EAAAA,EAAAA,UAAS,IACtCK,EAAeC,IAAoBN,EAAAA,EAAAA,UAAS,OAEnDO,EAAAA,EAAAA,YAAU,MACYC,iBAAqB,IAAdC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAChC,IACE,MAAMG,QAAiBC,MAAM,GAADC,OAZnB,+BAY+B,wBAAAA,OAAuBN,EAAI,aAAAM,OAb3D,qCAcR,IAAKF,EAASG,GAAI,MAAM,IAAIC,MAAM,+BAClC,MAAMC,QAAaL,EAASM,OAC5BpB,EAAUmB,EAAKE,QAAQC,MAAM,EAdb,KAehBjB,EAAckB,KAAKC,KAAKL,EAAKM,cAfb,IAgBlB,CAAE,MAAOC,GACPC,QAAQD,MAAM,yBAA0BA,EAC1C,CACF,CAEAE,CAAY1B,EAAY,GACvB,CAACA,IAEJ,MAAM2B,EAAoBC,IACpBA,EAAU,GAAKA,GAAW1B,GAC5BD,EAAe2B,EACjB,EAOF,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBACJC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,cAAaC,SACxBlC,EAAOoC,KAAKC,IACXL,EAAAA,EAAAA,MAAA,MAAmBC,UAAU,aAAYC,SAAA,EACvCC,EAAAA,EAAAA,KAAA,OAAKG,IAAG,kCAAArB,OAAoCoB,EAAME,aAAeC,IAAKH,EAAMI,SAC5ET,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,MAAAD,SAAKG,EAAMI,SACXT,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,gBAAcG,EAAMK,iBACvBV,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,WAASG,EAAMM,iBAClBR,EAAAA,EAAAA,KAAA,KAAGF,UAAU,iBAAgBC,SAC1B3B,IAAkB8B,EAAMO,GAAKP,EAAMQ,SAAQ,GAAA5B,OAAMoB,EAAMQ,SAAStB,MAAM,EAAG,KAAI,UAEhFY,EAAAA,EAAAA,KAAA,UAAQF,UAAU,kBAAkBa,QAASA,KAAMC,OAlBvCC,EAkBsDX,EAAMO,QAjBlFpC,EAAiBD,IAAkByC,EAAU,KAAOA,GAD9BA,KAkBgE,EAAAd,SACzE3B,IAAkB8B,EAAMO,GAAK,QAAU,aAVrCP,EAAMO,SAgBnBZ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,UAAQW,QAASA,IAAMhB,EAAiB3B,EAAc,GAAI8C,SAA0B,IAAhB9C,EAAkB+B,SAAC,cAGvFF,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,QAAM/B,EAAY,OAAKE,MAC7B8B,EAAAA,EAAAA,KAAA,UAAQW,QAASA,IAAMhB,EAAiB3B,EAAc,GAAI8C,SAAU9C,IAAgBE,EAAW6B,SAAC,cAMxG,C","sources":["pages/MovieList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './MovieList.css'; \r\n\r\nconst API_KEY = 'f71a63058781b41be67992f9e77f6da4';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\nconst MOVIES_PER_PAGE = 12;\r\n\r\nfunction MovieList() {\r\n  const [movies, setMovies] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [expandedMovie, setExpandedMovie] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchMovies = async (page = 1) => {\r\n      try {\r\n        const response = await fetch(`${BASE_URL}/movie/popular?page=${page}&api_key=${API_KEY}`);\r\n        if (!response.ok) throw new Error('Network response was not ok');\r\n        const data = await response.json();\r\n        setMovies(data.results.slice(0, MOVIES_PER_PAGE));\r\n        setTotalPages(Math.ceil(data.total_results / MOVIES_PER_PAGE));\r\n      } catch (error) {\r\n        console.error('Error fetching movies:', error);\r\n      }\r\n    };\r\n\r\n    fetchMovies(currentPage);\r\n  }, [currentPage]);\r\n\r\n  const handlePageChange = (newPage) => {\r\n    if (newPage > 0 && newPage <= totalPages) {\r\n      setCurrentPage(newPage);\r\n    }\r\n  };\r\n\r\n  const toggleOverview = (movieId) => {\r\n    setExpandedMovie(expandedMovie === movieId ? null : movieId);\r\n  };\r\n\r\n  return (\r\n    <div className=\"movie-list\">\r\n      <h2>Popular Movies</h2>\r\n      <ul className=\"movies-grid\">\r\n        {movies.map((movie) => (\r\n          <li key={movie.id} className=\"movie-item\">\r\n            <img src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`} alt={movie.title} />\r\n            <div className=\"movie-info\">\r\n              <h3>{movie.title}</h3>\r\n              <p>RELEASE DATE:{movie.release_date}</p>\r\n              <p>RATING: {movie.vote_average}</p>\r\n              <p className=\"movie-overview\">\r\n                {expandedMovie === movie.id ? movie.overview : `${movie.overview.slice(0, 100)}...`}\r\n              </p>\r\n              <button className=\"toggle-overview\" onClick={() => toggleOverview(movie.id)}>\r\n                {expandedMovie === movie.id ? 'CLOSE' : '...'}\r\n              </button>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <div className=\"pagination\">\r\n        <button onClick={() => handlePageChange(currentPage - 1)} disabled={currentPage === 1}>\r\n          Previous\r\n        </button>\r\n        <span>Page {currentPage} of {totalPages}</span>\r\n        <button onClick={() => handlePageChange(currentPage + 1)} disabled={currentPage === totalPages}>\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieList;\r\n"],"names":["movies","setMovies","useState","currentPage","setCurrentPage","totalPages","setTotalPages","expandedMovie","setExpandedMovie","useEffect","async","page","arguments","length","undefined","response","fetch","concat","ok","Error","data","json","results","slice","Math","ceil","total_results","error","console","fetchMovies","handlePageChange","newPage","_jsxs","className","children","_jsx","map","movie","src","poster_path","alt","title","release_date","vote_average","id","overview","onClick","toggleOverview","movieId","disabled"],"sourceRoot":""}