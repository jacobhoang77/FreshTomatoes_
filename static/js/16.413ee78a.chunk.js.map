{"version":3,"file":"static/js/16.413ee78a.chunk.js","mappings":"wKAIA,MAmFA,EAhFsBA,KACpB,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,KAC9BC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,KAC5BG,EAAaC,IAAkBJ,EAAAA,EAAAA,UAAS,IACxCK,EAAYC,IAAiBN,EAAAA,EAAAA,UAAS,IAmB7CO,EAAAA,EAAAA,YAAU,MAjBiBC,iBAAuC,IAAhCC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAGG,EAAWH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACxD,IACE,MAAMI,QAAiBC,EAAAA,EAAMC,IAAI,GAADC,OAVrB,+BAUiC,mBAAmB,CAC7DC,OAAQ,CACNC,QAbM,mCAcNC,SAAU,QACVX,OACAR,MAAOY,KAGXd,EAAUe,EAASO,KAAKC,SACxBhB,EAAcQ,EAASO,KAAKE,YAC9B,CAAE,MAAOC,GACPC,QAAQD,MAAM,iCAAkCA,EAClD,CACF,CAGEE,CAAmBvB,EAAaF,EAAM,GACrC,CAACE,EAAaF,IAEjB,MAKM0B,EAAoBC,IACxBxB,EAAewB,EAAQ,EAGzB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA0BC,SAAA,EACvCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBACJC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,YAAY,yBACZC,MAAOlC,EACPmC,SAhBgBC,IACpBnC,EAASmC,EAAMC,OAAOH,OACtB/B,EAAe,EAAE,EAeb0B,UAAU,kBAEZE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SACzBjC,EAAOyC,KAAIC,IACVX,EAAAA,EAAAA,MAAA,OAAqBC,UAAU,cAAaC,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,OACES,IAAG,mCAAAxB,OAAqCuB,EAAOE,cAC/CC,IAAKH,EAAOI,KACZd,UAAU,kBAEZD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,MAAAD,SAAKS,EAAOI,QACZf,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,sBAAoBS,EAAOK,UAAUN,KAAIO,GAASA,EAAMC,OAASD,EAAMF,OAAMI,KAAK,cAR/ER,EAAOS,SAarBpB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,UACEkB,QAASA,IAAMvB,EAAiBxB,EAAc,GAC9CgD,SAA0B,IAAhBhD,EAAkB4B,SAC7B,cAGDF,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,QAAM5B,EAAY,OAAKE,MAC7B2B,EAAAA,EAAAA,KAAA,UACEkB,QAASA,IAAMvB,EAAiBxB,EAAc,GAC9CgD,SAAUhD,IAAgBE,EAAW0B,SACtC,cAIC,C","sources":["pages/PopularP.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './PopularP.css';\r\n\r\nconst API_KEY = 'f71a63058781b41be67992f9e77f6da4';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\nconst PopularPeople = () => {\r\n  const [people, setPeople] = useState([]);\r\n  const [query, setQuery] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n\r\n  const fetchPopularPeople = async (page = 1, searchQuery = '') => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/person/popular`, {\r\n        params: {\r\n          api_key: API_KEY,\r\n          language: 'en-US',\r\n          page,\r\n          query: searchQuery,\r\n        },\r\n      });\r\n      setPeople(response.data.results);\r\n      setTotalPages(response.data.total_pages);\r\n    } catch (error) {\r\n      console.error('Error fetching popular people:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPopularPeople(currentPage, query);\r\n  }, [currentPage, query]);\r\n\r\n  const handleSearch = (event) => {\r\n    setQuery(event.target.value);\r\n    setCurrentPage(1); \r\n  };\r\n\r\n  const handlePageChange = (newPage) => {\r\n    setCurrentPage(newPage);\r\n  };\r\n\r\n  return (\r\n    <div className=\"popular-people-container\">\r\n      <h2>Popular People</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search for a person...\"\r\n        value={query}\r\n        onChange={handleSearch}\r\n        className=\"search-input\"\r\n      />\r\n      <div className=\"people-grid\">\r\n        {people.map(person => (\r\n          <div key={person.id} className=\"person-card\">\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/w200/${person.profile_path}`}\r\n              alt={person.name}\r\n              className=\"person-image\"\r\n            />\r\n            <div className=\"person-info\">\r\n              <h3>{person.name}</h3>\r\n              <p>Know for (Movies): {person.known_for.map(movie => movie.title || movie.name).join(', ')}</p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"pagination\">\r\n        <button\r\n          onClick={() => handlePageChange(currentPage - 1)}\r\n          disabled={currentPage === 1}\r\n        >\r\n          Previous\r\n        </button>\r\n        <span>Page {currentPage} of {totalPages}</span>\r\n        <button\r\n          onClick={() => handlePageChange(currentPage + 1)}\r\n          disabled={currentPage === totalPages}\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PopularPeople;\r\n"],"names":["PopularPeople","people","setPeople","useState","query","setQuery","currentPage","setCurrentPage","totalPages","setTotalPages","useEffect","async","page","arguments","length","undefined","searchQuery","response","axios","get","concat","params","api_key","language","data","results","total_pages","error","console","fetchPopularPeople","handlePageChange","newPage","_jsxs","className","children","_jsx","type","placeholder","value","onChange","event","target","map","person","src","profile_path","alt","name","known_for","movie","title","join","id","onClick","disabled"],"sourceRoot":""}